CREATE DATABASE odara CHARACTER SET utf8 COLLATE utf8_unicode_ci;

USE odara;

CREATE TABLE IF NOT EXISTS client (
  id INT NOT NULL AUTO_INCREMENT,
  create_date DATE,
  name VARCHAR(30) NOT NULL,
  email VARCHAR(255) NOT NULL,
  password CHAR(32) NOT NULL,
  phone VARCHAR(42),
  cpf VARCHAR(11),
  cnpj VARCHAR(15),
  address_id INT,
  address_delivery_id INT,
  PRIMARY KEY (id)
) DEFAULT CHARSET=utf8 ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS address (
  id INT NOT NULL AUTO_INCREMENT,
  address VARCHAR(150),
  address_number VARCHAR(10),
  district VARCHAR(50),
  city VARCHAR(50),
  uf VARCHAR(2),
  zip_code VARCHAR(10),
  PRIMARY KEY (id)
) DEFAULT CHARSET=utf8 ENGINE=InnoDB;

ALTER TABLE client ADD CONSTRAINT FOREIGN KEY (address_id) REFERENCES address (id);
ALTER TABLE client ADD CONSTRAINT FOREIGN KEY (address_delivery_id) REFERENCES address (id);

CREATE TABLE IF NOT EXISTS category (
  id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(50) UNIQUE NOT NULL,
  description TEXT,
  PRIMARY KEY (id)
) DEFAULT CHARSET=utf8 ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS product (
  id INT NOT NULL AUTO_INCREMENT,
  date_created DATE,
  name VARCHAR(255) NOT NULL UNIQUE,
  description TEXT,
  category TEXT,
  picture_uri VARCHAR(255),
  picture_title VARCHAR(255),
  prices TEXT,
  PRIMARY KEY (id)
) DEFAULT CHARSET=utf8 ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS price (
  id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(255),
  description VARCHAR(255),
  price DECIMAL(9,2) NOT NULL,
  PRIMARY KEY (id)
) DEFAULT CHARSET=utf8 ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS product_price (
  id INT NOT NULL AUTO_INCREMENT,
  product_id INT NOT NULL,
  price_id INT NOT NULL,
  PRIMARY KEY (id)
) DEFAULT CHARSET=utf8 ENGINE=InnoDB;

ALTER TABLE product_price ADD CONSTRAINT FOREIGN KEY (product_id) REFERENCES product (id);
ALTER TABLE product_price ADD CONSTRAINT FOREIGN KEY (price_id) REFERENCES price (id);

CREATE TABLE IF NOT EXISTS coupon (
  id INT NOT NULL AUTO_INCREMENT,
  date_created DATE NOT NULL,
  date_expires DATE NOT NULL,
  name VARCHAR(255) NOT NULL UNIQUE,
  code VARCHAR(50) NOT NULL UNIQUE,
  description TEXT,
  active BOOLEAN NOT NULL DEFAULT 1,
  type ENUM('DISCOUNT', 'GIFT'),
  percentual_discount REAL,
  gift_product_id INT,
  PRIMARY KEY (id)
) DEFAULT CHARSET=utf8 ENGINE=InnoDB;

ALTER TABLE coupon ADD CONSTRAINT FOREIGN KEY (gift_product_id) REFERENCES product (id);

CREATE TABLE IF NOT EXISTS shipping (
  id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  description TEXT,
  uf VARCHAR(2),
  zip_code_list TEXT,
  PRIMARY KEY (id)
) DEFAULT CHARSET=utf8 ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS shipping_type (
  id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  price DECIMAL(5,2),
  description TEXT,
  shipping_id INT,
  PRIMARY KEY (id)
) DEFAULT CHARSET=utf8 ENGINE=InnoDB;

ALTER TABLE shipping_type ADD CONSTRAINT FOREIGN KEY (shipping_id) REFERENCES shipping (id);

CREATE TABLE IF NOT EXISTS orders (
  id INT NOT NULL AUTO_INCREMENT,
  date_created DATE NOT NULL,
  full_price DECIMAL(9,2),
  total_price DECIMAL(9,2),
  percentual_discount REAL,
  client_id INT,
  payment_id INT,
  coupon_id INT,
  delivery_id INT,
  shipping_type_id INT,
  status ENUM('CREATED', 'PAYMENT_PROCESS', 'SENDING', 'FINISHED'),
  PRIMARY KEY (id)
) DEFAULT CHARSET=utf8 ENGINE=InnoDB;

ALTER TABLE orders ADD CONSTRAINT FOREIGN KEY (client_id) REFERENCES client (id);
ALTER TABLE orders ADD CONSTRAINT FOREIGN KEY (delivery_id) REFERENCES price (id);
ALTER TABLE orders ADD CONSTRAINT FOREIGN KEY (coupon_id) REFERENCES coupon (id);
ALTER TABLE orders ADD CONSTRAINT FOREIGN KEY (shipping_type_id) REFERENCES shipping_type (id);

CREATE TABLE IF NOT EXISTS products_order (
  id INT NOT NULL AUTO_INCREMENT,
  order_id INT,
  product_id INT,
  price_id INT,
  PRIMARY KEY (id)
) DEFAULT CHARSET=utf8 ENGINE=InnoDB;

ALTER TABLE products_order ADD CONSTRAINT FOREIGN KEY (product_id) REFERENCES product (id);
ALTER TABLE products_order ADD CONSTRAINT FOREIGN KEY (order_id) REFERENCES orders (id);
ALTER TABLE products_order ADD CONSTRAINT FOREIGN KEY (price_id) REFERENCES price (id);

SHOW TABLES;
